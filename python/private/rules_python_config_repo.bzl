"""Repository rule for the rules_python_config repository."""

load("//python/private:text_util.bzl", "render")

_EXTRA_TRANSITIONS_TEMPLATE = """
# Generated by @rules_python//python/private:rules_python_config_repo.bzl
#
# For a list of what modules added what labels, see
# transition_settings_debug.txt

EXTRA_TRANSITION_SETTINGS = {labels}
"""

_BUILD_CONTENTS = """
# Generated by @rules_python//python/private:rules_python_config_repo.bzl

load("@bazel_skylib//:bzl_library.bzl", "bzl_library")

package(default_visibility = ["//visibility:public"])

bzl_library(
    name = "extra_transition_settings_bzl",
    srcs = ["extra_transition_settings.bzl"],
)
"""

_TRANSITION_SETTINGS_DEBUG_TEMPLATE = """
# Generated by @rules_python//python/private:rules_python_config_repo.bzl

{lines}
"""

def _rules_python_config_repo_impl(rctx):
    rctx.file("BUILD.bazel", _BUILD_CONTENTS)

    rctx.file(
        "extra_transition_settings.bzl",
        _EXTRA_TRANSITIONS_TEMPLATE.format(
            labels = render.list(rctx.attr.transition_settings),
        ),
    )
    debug_lines = [
        "{} added by modules: {}".format(setting, ", ".join(sorted(requesters)))
        for setting, requesters in rctx.attr.transition_setting_generators.items()
    ]
    rctx.file(
        "transition_settings_debug.txt",
        _TRANSITION_SETTINGS_DEBUG_TEMPLATE.format(lines = "\n".join(debug_lines)),
    )

rules_python_config_repo = repository_rule(
    implementation = _rules_python_config_repo_impl,
    attrs = {
        "transition_setting_generators": attr.string_list_dict(),
        "transition_settings": attr.string_list(),
    },
)
