#load(
#    "@pypi//:requirements.bzl",
#    "data_requirement",
#    "dist_info_requirement",
#    "entry_point",
#)
load("@rules_python//python:defs.bzl", "py_binary", "py_test")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")

py_binary(
    name = "main",
    srcs = ["main.py"],
    deps = [
        "@pypi//requests",
        "@pypi//cognitojwt",
    ],
)

py_test(
    name = "test",
    srcs = ["test.py"],
    deps = [":main"],
)

# This rule adds a convenient way to update the requirements file.
compile_pip_requirements(
    name = "requirements",
    extra_args = ["--allow-unsafe"],
    requirements_in = "requirements.in",
    requirements_txt = {
        "@//:x86_64_linux": "requirements_lock_x86_64_linux.txt",
    },
    intermediate_file = {
        "@//:x86_64_linux": "intermediate_file_x86_64_linux.json",
    },
)

config_setting(
    name = "x86_64_linux",
    constraint_values = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
)

genquery(
    name = "cognitojwt_deps",
    expression = """filter(@pypi//, kind(".* rule", deps(@pypi//cognitojwt)))""",
    scope = ["@pypi//cognitojwt"],
    opts = [
        "--notool_deps",
    ],
)

sh_test(
    name = "cognitojwt_deps_test",
    srcs = ["cognitojwt_deps_test.sh"],
    data = [
        ":cognitojwt_deps",
    ],
)
