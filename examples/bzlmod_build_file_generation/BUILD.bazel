# Load various rules so that we can have bazel download
# various rulesets and dependencies.
# The `load` statement imports the symbol for the rule, in the defined
# ruleset. When the symbol is loaded you can use the rule.
load("@pip//:requirements.bzl", "requirement")
load("@rules_python//python:defs.bzl", "py_binary", "py_library", "py_test")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")

compile_pip_requirements(
    name = "requirements",
    extra_args = ["--allow-unsafe"],
    requirements_in = "requirements.in",
    requirements_txt = "requirements_lock.txt",
    requirements_windows = "requirements_windows.txt",
)

# This rule is auto-generated and managed by Gazelle,
# because it found the __init__.py file in this folder.
# See: https://bazel.build/reference/be/python#py_library
py_library(
    name = "bzlmod_build_file_generation",
    srcs = ["__init__.py"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//random_number_generator",
        requirement("flask"),
    ],
)

# A py_binary is an executable Python program consisting of a collection of .py source files.
# See: https://bazel.build/reference/be/python#py_binary
#
# This rule is auto-generated and managed by Gazelle,
# because it found the __main__.py file in this folder.
# This rule creates a target named //:bzlmod_build_file_generation_bin and you can use
# bazel to run the target:
# `bazel run //:bzlmod_build_file_generation_bin`
py_binary(
    name = "bzlmod_build_file_generation_bin",
    srcs = ["__main__.py"],
    main = "__main__.py",
    visibility = ["//:__subpackages__"],
    deps = [":bzlmod_build_file_generation"],
)

# A py_test is a Python unit test.
# See: https://bazel.build/reference/be/python#py_test
#
# This rule is auto-generated and managed by Gazelle,
# because it found the __test__.py file in this folder.
# This rule creates a target named //:bzlmod_build_file_generation_test and you can use
# bazel to run the target:
# `bazel test //:bzlmod_build_file_generation_test`
py_test(
    name = "bzlmod_build_file_generation_test",
    srcs = ["__test__.py"],
    main = "__test__.py",
    deps = [":bzlmod_build_file_generation"],
)
